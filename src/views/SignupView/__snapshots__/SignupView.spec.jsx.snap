// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`test signup view should SignupComponent match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SignupView
    _isMockFunction={true}
    data={Object {}}
    getMockImplementation={[Function]}
    getMockName={[Function]}
    mock={
      Object {
        "calls": Array [],
        "instances": Array [],
        "invocationCallOrder": Array [],
        "results": Array [],
      }
    }
    mockClear={[Function]}
    mockImplementation={[Function]}
    mockImplementationOnce={[Function]}
    mockName={[Function]}
    mockRejectedValue={[Function]}
    mockRejectedValueOnce={[Function]}
    mockReset={[Function]}
    mockResolvedValue={[Function]}
    mockResolvedValueOnce={[Function]}
    mockRestore={[Function]}
    mockReturnThis={[Function]}
    mockReturnValue={[Function]}
    mockReturnValueOnce={[Function]}
    signUp={[Function]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <SignupForm
        errors={Object {}}
        onChange={[Function]}
        onSubmit={[Function]}
      />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "errors": Object {},
        "onChange": [Function],
        "onClick": undefined,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <SignupForm
          errors={Object {}}
          onChange={[Function]}
          onSubmit={[Function]}
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "errors": Object {},
          "onChange": [Function],
          "onClick": undefined,
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
